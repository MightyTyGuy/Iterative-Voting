from experiment_group import experiment_group
import agent
import generators

tests = []

tests.append(experiment_group(agent.BestResponseAgent, agent.linear_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.BestResponseAgent, agent.linear_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.BestResponseAgent, agent.exp_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.BestResponseAgent, agent.exp_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.BestResponseAgent, agent.log_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.BestResponseAgent, agent.log_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.BestResponseAgent, agent.linear_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.BestResponseAgent, agent.linear_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.BestResponseAgent, agent.exp_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.BestResponseAgent, agent.exp_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.BestResponseAgent, agent.log_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.BestResponseAgent, agent.log_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.BestResponseAgent, agent.linear_util, generators.polya_eggenberger, 100, 10, 1000, 100, .5))
tests.append(experiment_group(agent.BestResponseAgent, agent.linear_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))
tests.append(experiment_group(agent.BestResponseAgent, agent.exp_util, generators.polya_eggenberger, 100, 10, 1000,100, .5))
tests.append(experiment_group(agent.BestResponseAgent, agent.exp_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))
tests.append(experiment_group(agent.BestResponseAgent, agent.log_util, generators.polya_eggenberger, 100, 10, 1000,100, .5))
tests.append(experiment_group(agent.BestResponseAgent, agent.log_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))
tests.append(experiment_group(agent.BestResponseAgent, agent.linear_util, generators.polya_eggenberger, 100, 10, 1000,100, .5))
tests.append(experiment_group(agent.BestResponseAgent, agent.linear_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))
tests.append(experiment_group(agent.BestResponseAgent, agent.exp_util, generators.polya_eggenberger, 100, 10, 1000,100, .5))
tests.append(experiment_group(agent.BestResponseAgent, agent.exp_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))
tests.append(experiment_group(agent.BestResponseAgent, agent.log_util, generators.polya_eggenberger, 100, 10, 1000, 100, .5))
tests.append(experiment_group(agent.BestResponseAgent, agent.log_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))

tests.append(experiment_group(agent.PragmatistAgent, agent.linear_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.PragmatistAgent, agent.linear_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.PragmatistAgent, agent.exp_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.PragmatistAgent, agent.exp_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.PragmatistAgent, agent.log_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.PragmatistAgent, agent.log_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.PragmatistAgent, agent.linear_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.PragmatistAgent, agent.linear_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.PragmatistAgent, agent.exp_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.PragmatistAgent, agent.exp_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.PragmatistAgent, agent.log_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.PragmatistAgent, agent.log_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.PragmatistAgent, agent.linear_util, generators.polya_eggenberger, 100, 10, 1000, 100, .5))
tests.append(experiment_group(agent.PragmatistAgent, agent.linear_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))
tests.append(experiment_group(agent.PragmatistAgent, agent.exp_util, generators.polya_eggenberger, 100, 10, 1000,100, .5))
tests.append(experiment_group(agent.PragmatistAgent, agent.exp_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))
tests.append(experiment_group(agent.PragmatistAgent, agent.log_util, generators.polya_eggenberger, 100, 10, 1000,100, .5))
tests.append(experiment_group(agent.PragmatistAgent, agent.log_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))
tests.append(experiment_group(agent.PragmatistAgent, agent.linear_util, generators.polya_eggenberger, 100, 10, 1000,100, .5))
tests.append(experiment_group(agent.PragmatistAgent, agent.linear_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))
tests.append(experiment_group(agent.PragmatistAgent, agent.exp_util, generators.polya_eggenberger, 100, 10, 1000,100, .5))
tests.append(experiment_group(agent.PragmatistAgent, agent.exp_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))
tests.append(experiment_group(agent.PragmatistAgent, agent.log_util, generators.polya_eggenberger, 100, 10, 1000, 100, .5))
tests.append(experiment_group(agent.PragmatistAgent, agent.log_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))

tests.append(experiment_group(agent.LearningAgent, agent.linear_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.LearningAgent, agent.linear_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.LearningAgent, agent.exp_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.LearningAgent, agent.exp_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.LearningAgent, agent.log_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.LearningAgent, agent.log_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.LearningAgent, agent.linear_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.LearningAgent, agent.linear_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.LearningAgent, agent.exp_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.LearningAgent, agent.exp_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.LearningAgent, agent.log_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.LearningAgent, agent.log_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.LearningAgent, agent.linear_util, generators.polya_eggenberger, 100, 10, 1000, 100, .5))
tests.append(experiment_group(agent.LearningAgent, agent.linear_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))
tests.append(experiment_group(agent.LearningAgent, agent.exp_util, generators.polya_eggenberger, 100, 10, 1000,100, .5))
tests.append(experiment_group(agent.LearningAgent, agent.exp_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))
tests.append(experiment_group(agent.LearningAgent, agent.log_util, generators.polya_eggenberger, 100, 10, 1000,100, .5))
tests.append(experiment_group(agent.LearningAgent, agent.log_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))
tests.append(experiment_group(agent.LearningAgent, agent.linear_util, generators.polya_eggenberger, 100, 10, 1000,100, .5))
tests.append(experiment_group(agent.LearningAgent, agent.linear_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))
tests.append(experiment_group(agent.LearningAgent, agent.exp_util, generators.polya_eggenberger, 100, 10, 1000,100, .5))
tests.append(experiment_group(agent.LearningAgent, agent.exp_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))
tests.append(experiment_group(agent.LearningAgent, agent.log_util, generators.polya_eggenberger, 100, 10, 1000, 100, .5))
tests.append(experiment_group(agent.LearningAgent, agent.log_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))

tests.append(experiment_group(agent.LearningBestResponseAgent, agent.linear_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.linear_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.exp_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.exp_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.log_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.log_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.linear_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.linear_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.exp_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.exp_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.log_util, generators.impartial_culture, 100, 10, 1000, 100))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.log_util, generators.impartial_culture, 100, 3, 1000, 100))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.linear_util, generators.polya_eggenberger, 100, 10, 1000, 100, .5))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.linear_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.exp_util, generators.polya_eggenberger, 100, 10, 1000,100, .5))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.exp_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.log_util, generators.polya_eggenberger, 100, 10, 1000,100, .5))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.log_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.linear_util, generators.polya_eggenberger, 100, 10, 1000,100, .5))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.linear_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.exp_util, generators.polya_eggenberger, 100, 10, 1000,100, .5))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.exp_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.log_util, generators.polya_eggenberger, 100, 10, 1000, 100, .5))
tests.append(experiment_group(agent.LearningBestResponseAgent, agent.log_util, generators.polya_eggenberger, 100, 3, 1000, 100, .5))